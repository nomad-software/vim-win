snippet main
	/**
	 * Imports.
	 */
	import std.stdio;

	/**
	 * Main entry point.
	 *
	 * Params:
	 *     args = An array of command line arguments passed to this program.
	 */
	void main(string[] args)
	{
		writeln("${1:Hello World!}");
	}
snippet doc
	/**
	 * ${1}
	 */
snippet wl
	writeln("${1}");
snippet wf
	writefln("${1}", ${2:data});
snippet fo
	format("${1}", ${2:data});
snippet for
	for (int ${2:x} = 0; $2 < ${1}; $2${3:++})
	{
		${4}
	}
snippet fore
	foreach (${1:type} ${2:value}; ${3:collection})
	{
		${4}
	}
snippet wh
	while (${1})
	{
		${2}
	}
snippet do
	do
	{
		${2}
		
	} while (${1});
snippet func
	${1:public} ${2:returns} ${3:function}(${4})
	{
		${5}
	}
snippet prop
	${1:public} @property ${2:returns} ${3:function}(${4})
	{
		${5}
	}
snippet if
	if (${1})
	{
		${2}
	}
snippet elf
	else if (${1})
	{
		${2}
	}
snippet el
	else
	{
		${1}
	}
snippet swi
	switch(${1})
	{
		case ${2}:
			${3}
			break;

		default:
			${4}
			break;
	}
snippet st
	struct ${1:Name}
	{
		${2}
	}
snippet in
	interface ${1:Name}
	{
		${2}
	}
snippet class
	class ${1:ClassName}
	{
		${2}
		this(${3})
		{
			${4}
		}

	}
snippet pr
	private ${1}
snippet pu
	public ${1}
snippet pro
	protected ${1}
snippet de
	debug ${1}
snippet ex
	export ${1}
snippet th
	this.${1}
snippet un
	unittest
	{
		${1}
	}
snippet as
	assert(${1});
snippet fileend
