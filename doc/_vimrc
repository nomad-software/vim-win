version 6.0
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <silent> <C-Space> 
map! <S-Insert> *
nnoremap  :nohlsearch
snoremap <silent> 	 i<Right>=TriggerSnippet()
nnoremap <silent>  :CtrlP D:\Projects\
nnoremap  :CtrlPBufTagAll
vmap  "*d
noremap s :TCommentAs =&ft_
noremap n :TCommentAs =&ft 
noremap a :TCommentAs 
noremap b :TCommentBlock
vnoremap <silent> r :TCommentRight
vnoremap <silent> i :TCommentInline
nnoremap <silent> r :TCommentRight
onoremap <silent> r :TCommentRight
noremap   :TComment 
noremap <silent> p m`vip:TComment``
vnoremap <silent>  :TCommentMaybeInline
nnoremap <silent>  :TComment
onoremap <silent>  :TComment
xmap S <Plug>VSurround
vmap [% [%m'gv``
noremap \_s :TCommentAs =&ft_
noremap \_n :TCommentAs =&ft 
noremap \_a :TCommentAs 
noremap \_b :TCommentBlock
xnoremap <silent> \_r :TCommentRight
nnoremap <silent> \_r :TCommentRight
snoremap <silent> \_r :TCommentRight
onoremap <silent> \_r :TCommentRight
xnoremap <silent> \_i :TCommentInline
noremap \_  :TComment 
noremap <silent> \_p vip:TComment
xnoremap <silent> \__ :TCommentMaybeInline
nnoremap <silent> \__ :TComment
snoremap <silent> \__ :TComment
onoremap <silent> \__ :TComment
nnoremap <silent> \grc :e $MYGVIMRC
nnoremap <silent> \rc :e $MYVIMRC
nnoremap <silent> \q :q!
nnoremap <silent> \w :Bclose!
vmap ]% ]%m'gv``
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nnoremap <silent> ff :NERDTreeFind
xnoremap <silent> gC :TCommentMaybeInline
nnoremap <silent> gCc :let w:tcommentPos = getpos(".") | set opfunc=tcomment#OperatorLineAnywayg@$
nnoremap <silent> gC :let w:tcommentPos = getpos(".") | set opfunc=tcomment#OperatorAnywayg@
xnoremap <silent> gc :TCommentMaybeInline
nnoremap <silent> gcc :let w:tcommentPos = getpos(".") | set opfunc=tcomment#OperatorLineg@$
nnoremap <silent> gc :let w:tcommentPos = getpos(".") | set opfunc=tcomment#Operatorg@
xmap gS <Plug>VgSurround
nmap gx <Plug>NetrwBrowseX
nnoremap <silent> gb =i{
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <C-Right> <Right>
nnoremap <silent> <C-Left> <Left>
nnoremap <silent> <C-Down> <Down>
nnoremap <silent> <C-Up> <Up>
nnoremap <silent> <C-S-Right> >
nnoremap <silent> <C-S-Left> <
nnoremap <silent> <C-S-Down> -
nnoremap <silent> <C-S-Up> +
nnoremap <silent> <F12> :CtrlPBuffer
nnoremap <silent> <F11> :CtrlPMRU
nnoremap <silent> <F2> :TlistToggle
nnoremap <silent> <F1> :NERDTreeToggle
vmap <C-Del> "*d
vmap <S-Del> "*d
vmap <C-Insert> "*y
vmap <S-Insert> "-d"*P
nmap <S-Insert> "*P
inoremap  :nohlsearch
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
inoremap s :TCommentAs =&ft_
inoremap n :TCommentAs =&ft 
inoremap a :TCommentAs 
inoremap b :TCommentBlock
inoremap <silent> r :TCommentRight
inoremap   :TComment 
inoremap <silent> p :norm! m`vip:TComment``
inoremap <silent>  :TComment
vnoremap Ã† :s///gic
nnoremap Ã“ :Switch
nnoremap Ã† "0yiw:%s/0//gic<Left><Left><Left><Left>
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set background=dark
set backspace=indent,eol,start
set cmdwinheight=30
set encoding=utf-8
set fileencodings=utf-8,latin1,ucs-bom
set fileformats=unix,dos,mac
set fillchars=vert:\ ,fold:-,diff:-
set guicursor=a:blinkon0
set guifont=DeJaVu_Sans_Mono:h10
set guioptions=e
set helplang=en
set hidden
set history=1000
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set listchars=tab:Â»\ ,trail:Â«
set matchtime=0
set runtimepath=~/vimfiles,D:\\Storage\\Applications\\Windows\ Software\\vim-win/vimfiles,D:\\Storage\\Applications\\Windows\ Software\\vim-win,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\align,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\butane,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\ctrlp,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\eunuch,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\matchit,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\nerdtree,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\snipmate,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\surround,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\switch,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\taglist,D:\\Storage\\Applications\\Windows\ Software\\vim-win\\bundle\\tcomment,D:\\Storage\\Applications\\Windows\ Software\\vim-win/vimfiles/after,~/vimfiles/after
set scrolloff=5
set shiftwidth=4
set showmatch
set sidescrolloff=5
set smartcase
set nostartofline
set statusline=%{empty(expand('%:t'))?'new\ buffer':expand('%:t')}\ %=%{empty(&filetype)?'untyped':&filetype}\ |\ %{empty(&fileencoding)?&encoding:&fileencoding}\ |\ %{&fileformat}\ 
set noswapfile
set tabstop=4
set whichwrap=b,s,<,>,h,l,[,]
set wildmenu
set wildmode=list:longest
set window=62
" vim: set ft=vim :
